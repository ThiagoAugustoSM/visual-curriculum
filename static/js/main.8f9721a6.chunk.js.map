{"version":3,"sources":["assets/img/peacock-logo.png","components/Header/index.tsx","components/Navigator/index.tsx","components/DisciplineBox/index.tsx","components/StatsHours/index.tsx","components/StatsContainer/index.tsx","components/NextSteps/index.tsx","components/Footer/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","useColorMode","colorMode","toggleColorMode","direction","align","justify","flexWrap","boxSize","src","Logo","alt","textAlign","as","fontSize","spacing","marginY","colorScheme","variant","rightIcon","FaGithub","onClick","window","open","FaMoon","FaSun","Navigator","size","m","separator","href","isCurrentPage","badgeSemesterColor","semester","DisciplineBox","props","id","name","prerequisites","hours","credits","isObligatory","useState","isActive","setIsActive","bgColor","setBgColor","bgColorDark","setBgColorDark","color","popover","setPopover","useEffect","borderRadius","borderWidth","maxW","minW","overflow","p","d","alignItems","px","fontWeight","letterSpacing","marginX","textTransform","length","ml","placement","trigger","map","prerequisite","mt","lineHeight","isTruncated","HourStats","title","total","partial","percentage","parseFloat","toFixed","flexDir","justifyContent","w","hasStripe","value","StatsContainer","academicTotalDone","academicObligatoryDone","academicElectiveDone","totalHours","totalHoursObligatory","totalHoursElective","StatsHours","NextSteps","MdTimelapse","Footer","role","aria-label","icon","FaLinkedinIn","App","curriculum","setCurriculum","setAcademicTotalDone","setAcademicObligatoryDone","setAcademicElectiveDone","handleClick","fetch","then","response","json","arrayOfSemesters","Array","from","semesters","_","i","maxH","disciplines","filter","item","code","columns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f9721a6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/peacock-logo.c54a9c97.png\";","import React from 'react';\n\nimport {\n  Stack,\n  Image,\n  Heading,\n  Text,\n  Button,\n  Icon,\n  useColorMode,\n} from '@chakra-ui/react';\nimport { FaSun, FaMoon, FaGithub } from 'react-icons/fa';\n\nimport Logo from '../../assets/img/peacock-logo.png';\n\nconst Header = (): React.ReactElement => {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const openGithub = () => {\n    window.open('https://github.com/ThiagoAugustoSM/visual-curriculum/');\n  };\n\n  return (\n    <Stack\n      direction=\"row\"\n      align=\"center\"\n      justify=\"space-between\"\n      flexWrap=\"wrap\"\n    >\n      <Stack direction=\"row\" align=\"center\">\n        <Image\n          boxSize=\"100px\"\n          src={Logo}\n          alt=\"Imagem de um pavÃ£o representando a logo do Visual Curriculum\"\n        />\n        <Stack direction=\"column\" textAlign=\"left\">\n          <Heading as=\"h2\" fontSize={['3xl', '4xl']}>\n            Visual Curriculum\n          </Heading>\n          <Text>Uma nova forma de visualizar a sua grade curricular!</Text>\n        </Stack>\n      </Stack>\n      <Stack direction=\"row\" flexWrap=\"wrap\" align=\"center\" spacing={[0, 0, 4]}>\n        <Button\n          marginY=\"2\"\n          colorScheme=\"blue\"\n          variant=\"outline\"\n          rightIcon={<Icon as={FaGithub} />}\n          onClick={() => openGithub()}\n        >\n          Quero contribuir!\n        </Button>\n        <Button\n          onClick={toggleColorMode}\n          rightIcon={\n            colorMode === 'light' ? <Icon as={FaMoon} /> : <Icon as={FaSun} />\n          }\n        >\n          Colocar em modo {colorMode === 'light' ? 'escuro?' : 'claro?'}\n        </Button>\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport { Breadcrumb, BreadcrumbItem, BreadcrumbLink } from '@chakra-ui/react';\n\nconst Navigator = (): React.ReactElement => {\n  return (\n    <Breadcrumb size=\"20\" m=\"3\" separator=\"/\">\n      <BreadcrumbItem>\n        <BreadcrumbLink href=\"#\">UFPE</BreadcrumbLink>\n      </BreadcrumbItem>\n      <BreadcrumbItem>\n        <BreadcrumbLink href=\"#\" isCurrentPage>\n          Engenharia da ComputaÃ§Ã£o\n        </BreadcrumbLink>\n      </BreadcrumbItem>\n    </Breadcrumb>\n  );\n};\n\nexport default Navigator;\n","import React, { useEffect, useState } from 'react';\n\nimport {\n  useColorMode,\n  Box,\n  Badge,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverArrow,\n  PopoverHeader,\n  PopoverBody,\n  UnorderedList,\n  ListItem,\n} from '@chakra-ui/react';\nimport { AiOutlineLock } from 'react-icons/ai';\nimport { DisciplineType } from '../../models/Curriculum';\n\nconst badgeSemesterColor = (semester: number) => {\n  switch (semester) {\n    case 1:\n      return 'gray';\n    case 2:\n      return 'red';\n    case 3:\n      return 'orange';\n    case 4:\n      return 'yellow';\n    case 5:\n      return 'green';\n    case 6:\n      return 'teal';\n    case 7:\n      return 'blue';\n    case 8:\n      return 'cyan';\n    case 9:\n      return 'purple';\n    case 10:\n      return 'pink';\n    default:\n      return 'gray';\n  }\n};\n\ntype OnClickTypes = {\n  isActive: boolean;\n  id: string;\n  isObligatory: boolean;\n  hours: number;\n};\n\ntype DisciplineBoxProps = {\n  id: string;\n  onClick: (params: OnClickTypes) => void;\n} & DisciplineType;\n\nconst DisciplineBox = (props: DisciplineBoxProps): React.ReactElement => {\n  const {\n    id,\n    onClick,\n    name,\n    prerequisites,\n    semester,\n    hours,\n    credits,\n    isObligatory,\n  } = props;\n  const { colorMode } = useColorMode();\n  const [isActive, setIsActive] = useState(false);\n  const [bgColor, setBgColor] = useState('white');\n  const [bgColorDark, setBgColorDark] = useState('');\n  const [popover, setPopover] = useState({ bgColor: '', color: '' });\n\n  const handleClick = () => {\n    if (isActive === true) {\n      setBgColor('white');\n      setBgColorDark('gray.800');\n    } else {\n      setBgColor('green.200');\n      setBgColorDark('green.500');\n    }\n\n    onClick({ isActive: !isActive, id, isObligatory, hours });\n    setIsActive(!isActive);\n  };\n\n  useEffect(() => {\n    setPopover({\n      bgColor: colorMode === 'light' ? 'white' : 'gray.800',\n      color: colorMode === 'light' ? 'gray.500' : 'gray.400',\n    });\n  }, [colorMode]);\n\n  return (\n    <Box\n      id={id}\n      onClick={handleClick}\n      bgColor={colorMode === 'light' ? bgColor : bgColorDark}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n      m=\"3\"\n      maxW=\"sm\"\n      minW=\"245px\"\n      overflow=\"hidden\"\n    >\n      <Box p=\"4\">\n        <Box d=\"flex\" alignItems=\"center\">\n          <Badge\n            borderRadius=\"full\"\n            colorScheme={badgeSemesterColor(semester)}\n            px=\"2\"\n          >\n            {semester}Âº PerÃ­odo\n          </Badge>\n\n          <Box\n            color=\"gray.500\"\n            fontSize=\"xs\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            marginX=\"2\"\n            textTransform=\"uppercase\"\n          >\n            {isObligatory ? 'ObrigatÃ³ria' : 'Eletiva'}\n          </Box>\n\n          {prerequisites.length > 0 && (\n            <Box ml=\"auto\">\n              <Popover placement=\"top\" trigger=\"hover\">\n                <PopoverTrigger>\n                  <Box>\n                    <AiOutlineLock />\n                  </Box>\n                </PopoverTrigger>\n\n                <PopoverContent\n                  d=\"flex\"\n                  bgColor={popover.bgColor}\n                  color={popover.color}\n                  fontSize=\"12px\"\n                  marginX=\"auto\"\n                  maxW=\"200px\"\n                  textTransform=\"uppercase\"\n                >\n                  <PopoverArrow bgColor={popover.bgColor} />\n                  <PopoverHeader fontWeight=\"semibold\">\n                    PrÃ©-requisitos\n                  </PopoverHeader>\n                  <PopoverBody>\n                    <UnorderedList>\n                      {prerequisites.map((prerequisite) => (\n                        <ListItem key={prerequisite}>{prerequisite}</ListItem>\n                      ))}\n                    </UnorderedList>\n                  </PopoverBody>\n                </PopoverContent>\n              </Popover>\n            </Box>\n          )}\n        </Box>\n\n        <Box\n          as=\"h4\"\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {name}\n        </Box>\n\n        <Box>\n          {hours}\n          <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n            HRs\n          </Box>\n        </Box>\n\n        <Box>\n          {credits}\n          <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\" ml=\"1\">\n            crÃ©dito(s)\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default DisciplineBox;\n","import React from 'react';\nimport { Box, Progress, Text } from '@chakra-ui/react';\n\ntype HourStatsProps = {\n  title: string;\n  total: number;\n  partial: number;\n};\n\nconst HourStats = ({\n  title,\n  total,\n  partial,\n}: HourStatsProps): React.ReactElement => {\n  const percentage = parseFloat(((partial / total) * 100).toFixed(2));\n  return (\n    <Box\n      minW=\"200px\"\n      maxW=\"md\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      overflow=\"hidden\"\n      m=\"3\"\n    >\n      <Box\n        p=\"4\"\n        d=\"flex\"\n        flexDir=\"column\"\n        alignItems=\"flex-start\"\n        justifyContent=\"center\"\n      >\n        <Text as=\"h4\" fontWeight=\"semibold\" lineHeight=\"tight\" isTruncated>\n          {title}\n        </Text>\n        <Box w=\"100%\" mt=\"1\">\n          <Progress hasStripe size=\"md\" value={percentage} />\n        </Box>\n        <Box>\n          <Text>\n            {percentage}\n            <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n              %\n            </Box>\n          </Text>\n        </Box>\n        <Box flexDir=\"row\">\n          {partial}\n          <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n            /\n          </Box>\n          {total}\n          <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n            HRs\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default HourStats;\n","import React from 'react';\nimport { Stack, Heading, Box } from '@chakra-ui/react';\n\nimport StatsHours from '../StatsHours';\n\ntype StatsContainerProps = {\n  academicTotalDone: number;\n  academicObligatoryDone: number;\n  academicElectiveDone: number;\n  totalHours: number;\n  totalHoursObligatory: number;\n  totalHoursElective: number;\n};\n\nconst StatsContainer = ({\n  academicTotalDone,\n  academicObligatoryDone,\n  academicElectiveDone,\n  totalHours,\n  totalHoursObligatory,\n  totalHoursElective,\n}: StatsContainerProps): React.ReactElement => {\n  return (\n    <Stack>\n      <Heading as=\"h2\" size=\"lg\" marginY=\"2\">\n        Aproveitamento AcadÃªmico\n      </Heading>\n      <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n        <StatsHours\n          title=\"Total\"\n          partial={academicTotalDone}\n          total={totalHours}\n        />\n        <StatsHours\n          title=\"ObrigatÃ³ria\"\n          partial={academicObligatoryDone}\n          total={totalHoursObligatory}\n        />\n        <StatsHours\n          title=\"Eletivas\"\n          partial={academicElectiveDone}\n          total={totalHoursElective}\n        />\n      </Box>\n    </Stack>\n  );\n};\n\nexport default StatsContainer;\n","import React from 'react';\n\nimport {\n  Heading,\n  Text,\n  Stack,\n  List,\n  ListItem,\n  ListIcon,\n} from '@chakra-ui/react';\nimport { MdTimelapse } from 'react-icons/md';\n\nconst NextSteps = (): React.ReactElement => {\n  return (\n    <Stack>\n      <Heading as=\"h2\" size=\"lg\" marginY=\"2\">\n        Sobre o Projeto\n      </Heading>\n      <Text>\n        Este projeto tem o objetivo de facilitar o entendimento do currÃ­culo de\n        universidades do Brasil, atravÃ©s de uma fÃ¡cil visualizaÃ§Ã£o. Com o modelo\n        Open Source, estudantes de todo o Brasil podem adicionar informaÃ§Ãµes\n        atualizadas a este site. O projeto ainda estÃ¡ em desenvolvimento, abaixo\n        estÃ£o as prÃ³ximas funcionalidades:\n      </Text>\n      <List spacing={3}>\n        <ListItem>\n          <ListIcon as={MdTimelapse} color=\"green.500\" />\n          OpÃ§Ã£o de salvar o seu histÃ³rico localmente.\n        </ListItem>\n        <ListItem>\n          <ListIcon as={MdTimelapse} color=\"green.500\" />\n          Habilitar para a criaÃ§Ã£o de novos currÃ­culos e Universidades.\n        </ListItem>\n      </List>\n    </Stack>\n  );\n};\n\nexport default NextSteps;\n","import React from 'react';\n\nimport { Stack, Text, Icon, IconButton } from '@chakra-ui/react';\nimport { FaLinkedinIn, FaGithub } from 'react-icons/fa';\n\nconst Footer = (): React.ReactElement => {\n  return (\n    <Stack align=\"center\" mt=\"5\">\n      <Text>\n        Feito com{' '}\n        <span role=\"img\" aria-label=\"hearth\">\n          ð\n        </span>{' '}\n        em Recife, por Thiago Augusto\n      </Text>\n      <Stack spacing={3} direction=\"row\">\n        <IconButton\n          size=\"sm\"\n          aria-label=\"Abrir Linkedin\"\n          icon={<Icon as={FaLinkedinIn} />}\n        />\n        <IconButton\n          size=\"sm\"\n          aria-label=\"Abrir Linkedin\"\n          icon={<Icon as={FaGithub} />}\n        />\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport { Box, SimpleGrid } from '@chakra-ui/react';\n\nimport Header from './components/Header';\nimport Navigator from './components/Navigator';\nimport DisciplineBox from './components/DisciplineBox';\nimport StatsContainer from './components/StatsContainer';\nimport NextSteps from './components/NextSteps';\nimport Footer from './components/Footer';\n\nimport { CurriculumType } from './models/Curriculum';\n\nfunction App(): React.ReactElement {\n  const [curriculum, setCurriculum] = useState<\n    CurriculumType | Record<string, never>\n  >({});\n  const [academicTotalDone, setAcademicTotalDone] = useState(0);\n  const [academicObligatoryDone, setAcademicObligatoryDone] = useState(0);\n  const [academicElectiveDone, setAcademicElectiveDone] = useState(0);\n\n  const handleClick = ({ isActive, isObligatory, hours }) => {\n    if (isActive) {\n      if (isObligatory) {\n        setAcademicObligatoryDone(academicObligatoryDone + hours);\n      } else {\n        setAcademicElectiveDone(academicElectiveDone + hours);\n      }\n      setAcademicTotalDone(academicTotalDone + hours);\n    } else {\n      if (isObligatory) {\n        setAcademicObligatoryDone(academicObligatoryDone - hours);\n      } else {\n        setAcademicElectiveDone(academicElectiveDone - hours);\n      }\n      setAcademicTotalDone(academicTotalDone - hours);\n    }\n  };\n\n  useEffect(() => {\n    fetch('./university/UFPE/engenhariaDaComputacao.json')\n      .then((response) => response.json())\n      .then((json) => setCurriculum(json));\n  }, []);\n\n  const arrayOfSemesters = Array.from(\n    { length: curriculum?.semesters },\n    (_, i) => i + 1\n  );\n\n  return (\n    <Box m=\"5\">\n      <Header />\n      <Navigator />\n      <Box w=\"100%\" maxH=\"60vh\" overflow=\"scroll\">\n        {arrayOfSemesters.map((semester) => (\n          <Box d=\"flex\" w=\"100%\" key={`row-${semester}`}>\n            {curriculum?.disciplines\n              .filter((item) => item.semester === semester)\n              .map((item) => (\n                <DisciplineBox\n                  key={item.name}\n                  id={item.code}\n                  onClick={handleClick}\n                  {...item}\n                />\n              ))}\n          </Box>\n        ))}\n      </Box>\n      <SimpleGrid columns={[1, 2]} spacing=\"5\">\n        <StatsContainer\n          academicTotalDone={academicTotalDone}\n          academicObligatoryDone={academicObligatoryDone}\n          academicElectiveDone={academicElectiveDone}\n          totalHours={curriculum?.totalHours}\n          totalHoursObligatory={curriculum?.totalHoursObligatory}\n          totalHoursElective={curriculum?.totalHoursElective}\n        />\n        <NextSteps />\n      </SimpleGrid>\n      <Footer />\n    </Box>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider, CSSReset, ColorModeScript } from '@chakra-ui/react';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <CSSReset />\n      <ColorModeScript />\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}